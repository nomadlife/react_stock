{"version":3,"sources":["components/layout/header.js","components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["headerStyle","background","color","textAlign","padding","linkStyle","textDecoration","Header","style","to","About","Fragment","makeStyles","table","minWidth","createData","id","title","code","date","price","share","rate","share_after_tax","rows","App","className","exact","path","render","props","TableHead","TableRow","rowSpan","TableCell","align","TableBody","map","row","key","component","Component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c14c3733.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header style={headerStyle}>\r\n            <h1>리츠 배당률</h1>\r\n            <Link \r\n            style={linkStyle} to=\"/\">Home</Link> | <Link \r\n            style={linkStyle} to=\"/about\">About</Link>\r\n        </header>\r\n    )\r\n}\r\n\r\nconst headerStyle = {\r\n    background:'#333',\r\n    color:'#fff',\r\n    textAlign:'center',\r\n    padding:'10px'\r\n}\r\n\r\nconst linkStyle = {\r\n    color:'#fff',\r\n    textDecoration : 'none'\r\n}\r\n\r\nexport default Header\r\n\r\n\r\n","import React from 'react'\r\n\r\nfunction About() {\r\n    return (\r\n        <React.Fragment>\r\n            <h1>About</h1>\r\n            <p>This is the TodoList app v1.0.0 It is part of a React crash cource</p>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default About;\r\n","import './App.css';\n\nimport React, { Component } from 'react'\nimport Header from './components/layout/header';\nimport About from './components/pages/About';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\n// import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n// import Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\n// import TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n// import Paper from '@material-ui/core/Paper';\n\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nfunction createData(id, title, code, date, price, share, rate, share_after_tax) {\n  return { id, title, code, date, price, share, rate, share_after_tax };\n}\n\nconst rows = [\n  createData(1, '롯데리츠', '033590','2019-12', 6230, 84, 1.35, 71),\n  createData(2, '롯데리츠', '033590', '2020.06', 6230, 158, 2.545, 134),\n  createData(3, '롯데리츠', '033590', '2020.12.', 6230, 158, 2.54, 134),\n  createData(4, 'NH프라임리츠', '388100', '2020.05.', 6030, 125, 2.07, 106),\n  createData(5, 'NH프라임리츠', '388100', '2020.09.', 6030, 125, 2.07, 106),\n  createData(6, '신한알파리츠', '293940', '2020.03', 7570, 140, 1.85, 118),\n  createData(7, '신한알파리츠', '293940', '2020.09', 7570, 140, 1.85, 118),\n  createData(8, '이리츠코크렙', '088260', '2019.12', 6820, 169, 2.48, 143),\n  createData(9, '이리츠코크렙', '088260', '2020.06', 6820, 170, 2.49, 144),\n  createData(10, '이리츠코크렙', '088260', '2020.12', 6820, 170, 2.49, 144),\n];\n\nexport class App extends Component {\n\n  \n\n  \n  render() {\n\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header/>\n            <Route exact path=\"/\" render={props => (\n              <React.Fragment>\n\n                  <TableHead>\n                    <TableRow rowSpan=\"2\">\n                      <TableCell align=\"center\">리츠명</TableCell>\n                      <TableCell align=\"right\">배당시기</TableCell>\n                      <TableCell align=\"right\">\n                        현재주가(원)\n                        </TableCell>\n                      <TableCell align=\"right\">배당금(원)</TableCell>\n                      <TableCell align=\"right\">배당률</TableCell>\n                      <TableCell align=\"right\">배당금(원,세후)</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {rows.map(row => (\n                      <TableRow key={row.id}>\n                        <TableCell align=\"left\">{row.title}\n                        {row.code}</TableCell>\n                        <TableCell align=\"right\">{row.date}</TableCell>\n                        <TableCell align=\"right\">{row.price}</TableCell>\n                        <TableCell align=\"right\">{row.share}</TableCell>\n                        <TableCell align=\"right\">{row.rate}</TableCell>\n                        <TableCell align=\"right\">{row.share_after_tax}</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n\n              </React.Fragment>\n            )}></Route>\n                \n\n            <Route path=\"/about\" component={About}\n            ></Route>\n\n\n            \n          </div>\n        </div>\n        \n  \n    </Router>\n    )\n  }\n}\n\nexport default App\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}