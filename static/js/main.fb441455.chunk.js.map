{"version":3,"sources":["components/layout/header.js","components/pages/About.js","components/TodoItem.js","components/Todos.js","App.js","serviceWorker.js","index.js"],"names":["headerStyle","background","color","textAlign","padding","linkStyle","textDecoration","Header","style","to","About","Fragment","TodoItem","getStyle","borderBottom","props","todo","completed","this","title","id","code","date","price","share","rate","share_after_tax","Component","Todos","todos","map","makeStyles","table","minWidth","createData","name","calories","fat","carbs","protein","App","state","className","exact","path","render","component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fb441455.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header style={headerStyle}>\r\n            <h1>리츠 배당률</h1>\r\n            <Link \r\n            style={linkStyle} to=\"/\">Home</Link> | <Link \r\n            style={linkStyle} to=\"/about\">About</Link>\r\n        </header>\r\n    )\r\n}\r\n\r\nconst headerStyle = {\r\n    background:'#333',\r\n    color:'#fff',\r\n    textAlign:'center',\r\n    padding:'10px'\r\n}\r\n\r\nconst linkStyle = {\r\n    color:'#fff',\r\n    textDecoration : 'none'\r\n}\r\n\r\nexport default Header\r\n\r\n\r\n","import React from 'react'\r\n\r\nfunction About() {\r\n    return (\r\n        <React.Fragment>\r\n            <h1>About</h1>\r\n            <p>This is the TodoList app v1.0.0 It is part of a React crash cource</p>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport Todos from './Todos';\r\n\r\nexport class TodoItem extends Component {\r\n    getStyle = () => {\r\n        return {\r\n            background:'#f4f4f4',\r\n            padding:'10px',\r\n            borderBottom:'1px #ccc dotted',\r\n            textDecoration:this.props.todo.completed ?\r\n            'line-through' : 'none'\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { id, title, code, date, price, share, rate, share_after_tax } = this.props.todo;\r\n        return (\r\n            <div style={this.getStyle()}>\r\n                <p>\r\n                {title} {code} {date} {price} {share} {rate} {share_after_tax}\r\n                \r\n                {/* <button  style={btnStyle}>x</button> */}\r\n                \r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nTodoItem.propTypes = {\r\n    todo: PropTypes.object.isRequired,\r\n    markComplete: PropTypes.func.isRequired,\r\n    delTodo: PropTypes.func.isRequired\r\n}\r\n\r\nconst btnStyle = {\r\n    background:'#ff0000',\r\n    color:'#fff',\r\n    border:'none',\r\n    padding:'5px 9px',\r\n    borderRadius:'20%',\r\n    cursor:'pointer',\r\n    float:'right'\r\n}\r\nconst itemStyle = {\r\n    backgroungColor: '#f4f4f4'\r\n}\r\n\r\nexport default TodoItem\r\n","import React, { Component } from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Todos extends Component {\r\n    \r\n  render(){\r\n    //   console.log('Todos : ',this.props.todos);\r\n      return this.props.todos.map((todo) => (\r\n          <TodoItem todo={todo} />\r\n      ));\r\n  }\r\n}\r\n\r\nTodos.propTypes = {\r\n    todos: PropTypes.array.isRequired,\r\n    markComplete: PropTypes.func.isRequired,\r\n    delTodo: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Todos;\r\n","import './App.css';\n\nimport React, { Component } from 'react'\nimport Header from './components/layout/header';\nimport About from './components/pages/About';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\n// import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport Todos from './components/Todos'\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\n\nexport class App extends Component {\n\n  state = {\n    todos:[\n      {\n        id:1, title:'롯데리츠', code:'033590', date:'2019-12', price:6230,\n        share:84, rate:1.35, share_after_tax:71, completed:false\n      },\n      {\n        id:2, title:'롯데리츠', code:'033590', date:'2020.06',price:6230,\n        share:158, rate:2.545, share_after_tax:134, completed:false\n      },\n      {\n        id:3, title:'롯데리츠', code:'033590', date:'2020.12.', price:6230,\n        share:158, rate:2.54, share_after_tax:134, completed:false\n      },\n      {\n        id:4, title:'NH프라임리츠', code:'388100', date:'2020.05.', price:6030,\n        share:125, rate:2.07, share_after_tax:106, completed:false\n      },\n      {\n        id:5, title:'NH프라임리츠', code:'388100', date:'2020.09.', price:6030,\n        share:125, rate:2.07, share_after_tax:106, completed:false\n      },\n      {\n        id:6, title:'신한알파리츠', code:'293940', date:'2020.03', price:7570,\n        share:140, rate:1.85, share_after_tax:118, completed:false\n      },\n      {\n        id:7, title:'신한알파리츠', code:'293940', date:'2020.09', price:7570,\n        share:140, rate:1.85, share_after_tax:118, completed:false\n      },\n      {\n        id:8, title:'이리츠코크렙', code:'088260', date:'2019.12', price:6820,\n        share:169, rate:2.48, share_after_tax:143, completed:false\n      },\n      {\n        id:9, title:'이리츠코크렙', code:'088260', date:'2020.06', price:6820,\n        share:170, rate:2.49, share_after_tax:144, completed:false\n      },\n      {\n        id:10, title:'이리츠코크렙', code:'088260', date:'2020.12', price:6820,\n        share:170, rate:2.49, share_after_tax:144, completed:false\n      },\n    ]\n  }\n\n  \n  render() {\n\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header/>\n            <Route exact path=\"/\" render={props => (\n              <React.Fragment>\n                \n                {'리츠명'} {'배당시기'} {'현재주가'} {'배당금'} {'배당률'} {'배당금(세후)'}\n                <Todos todos={this.state.todos}></Todos>\n\n              </React.Fragment>\n            )}></Route>\n                \n\n            <Route path=\"/about\" component={About}\n            ></Route>\n\n\n            \n          </div>\n        </div>\n        \n  \n    </Router>\n    )\n  }\n}\n\nexport default App\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}